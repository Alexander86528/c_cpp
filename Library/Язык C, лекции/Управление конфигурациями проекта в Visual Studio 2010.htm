<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><META content="IE=5.0000" http-equiv="X-UA-Compatible">
<TITLE>INTUIT.ru::Интернет-Университет Информационных Технологий</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type>
<META name=“robots” content=“noindex,nofollow”><LINK rel=stylesheet 
type=text/css href="mhtml:prcmsvs2010_24_files/printable.css">
<META name=GENERATOR content="MSHTML 10.00.9200.16384"></HEAD>
<BODY leftMargin=6 topMargin=6 marginwidth="6" marginheight="6">
<DIV align=left><SPAN style="FONT-WEIGHT: bold; COLOR: #000000">&nbsp;&nbsp; 
<SPAN style="FONT-SIZE: 12pt">Интернет-Университет Информационных 
Технологий</SPAN> </SPAN></DIV>&nbsp;&nbsp; <SPAN 
style="COLOR: #330066; TEXT-DECORATION: underline" align="rright"><A 
href="http://www.intuit.ru/">http://www.intuit.ru/</A></SPAN> 
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD height=8 colSpan=3><IMG 
      src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
      width=1 height=8></TD></TR>
  <TR>
    <TD class=orang height=1 colSpan=3><IMG 
      src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
      width=1 height=1></TD></TR>
  <TR>
    <TD height=8 colSpan=3><IMG 
      src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
      width=1 height=8></TD></TR>
  <TR vAlign=top>
    <TD><IMG 
      src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
      width=8 height=1></TD>
    <TD><!-- content -->
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=head>Программирование на языке C в Microsoft Visual Studio 
            2010</TD></TR>
        <TR>
          <TD height=4><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=4></TD></TR>
        <TR>
          <TD class=orang height=1><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=1></TD></TR>
        <TR>
          <TD height=8><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=8></TD></TR>
        <TR>
          <TD><SPAN class=headsub>Дополнительные материалы: Управление 
            конфигурациями проекта в Visual Studio 2010: версия для печати и 
            PDA</SPAN> </TD></TR>
        <TR>
          <TD height=8><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=8></TD></TR>
        <TR>
          <TD class=orang height=1><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=1></TD></TR>
        <TR>
          <TD height=8><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=8></TD></TR>
        <TR>
          <TD><A name=sect1></A>
            <H3></H3>
            <P id=id_1>Любой проект в Visual Studio 2010 включает несколько 
            самостоятельных конфигураций для компиляции разных версий программы. 
            Конфигурацией называется набор параметром компилятора, компоновщика 
            и библиотекаря, используемый при построении проекта. По умолчанию, 
            при создании проекта, среда Visual Studio 2010 автоматически 
            включает в него две конфигурации: Debug (отладочная) и Release 
            (финальная). Как следует из их названий, отладочная конфигурация 
            используется в процессе написания программы, ее тестовых запусков 
            для обнаружения и исправления ошибок; в то время как финальная 
            конфигурация используется для построения конечной версии продукта, 
            передаваемого заказчику для промышленного использования.</P>
            <DIV id=mark_1 class=lecture_mark></DIV>
            <P id=id_2>При создании проекта настройки отладочной (Debug) и 
            финальной (Release) конфигураций устанавливаются в значения по 
            умолчанию. С этими настройками выполняются следующие действия:</P>
            <DIV id=mark_2 class=lecture_mark></DIV>
            <UL id=id_3>
              <LI>Debug (отладочная) конфигурация проекта компилируется с 
              включением полной символьной отладочной информации и выключенной 
              оптимизацией. Оптимизация кода затрудняет процесс отладки, так как 
              усложняет или даже полностью изменяет отношение между строками 
              исходного кода программы и сгенерированными машинными 
              инструкциями. Такая отладочная информация используется отладчиком 
              Visual Studio 2010 для отображения значений переменных, 
              определения текущей выполняемой строки программы, отображения 
              стека вызовов и так далее, то есть для поддержки стандартных 
              действий, выполняемых при отладке программы.
              <LI>Release (финальная) конфигурация проекта не содержит никакой 
              отладочной информации и подвергается полной оптимизации. Без 
              отладочной информации процесс отладки программы очень затруднен. 
              Однако, при необходимости, отладочная информация может быть 
              создана и для финальной версии программы и записана в отдельный 
              файл с расширением .pdb. Файлы отладочной информации .pdb могут 
              оказаться очень полезными, если позднее возникнет необходимость в 
              отладке финальной версии программы, например, при обнаружении 
              критических ошибок в процессе ее эксплуатации на компьютерах 
              заказчика. Файлы .pdb обычно заказчику не передаются, а 
              сохраняются у разработчиков.</LI></UL>
            <DIV id=mark_3 class=lecture_mark></DIV>
            <P id=id_6>Переключение между конфигурациями можно осуществлять из 
            панели инструментов или при помощи окна Configuration Manager 
            (менеджер конфигураций).</P>
            <DIV id=mark_6 class=lecture_mark></DIV>
            <P id=id_7>Для быстрого переключения конфигурации, используемой для 
            компиляции проекта, используется стандартная панель инструментов (<A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.1">рис. 
            24.1</A>).</P>
            <DIV id=mark_7 class=lecture_mark></DIV>
            <P id=id_8 align=left><A name=image.24.1></A></P>
            <DIV><IMG alt="Переключение конфигураций из панели инструментов" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA96(1).tmp" 
            width=583 height=143></DIV><BR><B>Рис. 24.1.</B>&nbsp; Переключение 
            конфигураций из панели инструментов
            <P></P>
            <DIV id=mark_8 class=lecture_mark></DIV>
            <P id=id_9>Программист может в любой момент изменить настройки 
            конфигурации проекта или, при необходимости, создать новую 
            конфигурацию. Эти действия выполняются в окне свойств проекта. 
            Настройки свойств проекта применяются к текущей выбранной 
            конфигурации. Можно указать одну из созданных конфигураций проекта, 
            или выбрать All configurations, в этом случае настройки будут 
            применены ко всем конфигурациям одновременно. Рассмотрим основные 
            отличия в настройках проекта для отладочной и финальной 
            конфигураций. На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.2">рис. 
            24.2</A> изображено окно свойств проекта со страницей настроек 
            оптимизации (Optimization) для отладочной конфигурации проекта. 
            Видно, что для отладочной конфигурации оптимизация генерируемого 
            машинного кода выключена (Disabled).</P>
            <DIV id=mark_9 class=lecture_mark></DIV>
            <P id=id_10 align=left><A name=image.24.2></A></P>
            <DIV><IMG 
            alt="Страница свойств Optimization для отладочной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEAB9(1).tmp" 
            width=612 height=430></DIV><BR><B>Рис. 24.2.</B>&nbsp; Страница 
            свойств Optimization для отладочной конфигурации
            <P></P>
            <DIV id=mark_10 class=lecture_mark></DIV>
            <P id=id_11>Для финальной версии проекта по умолчанию включена 
            оптимизация по скорости выполнения программы (Optimize Speed). На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.3">рис. 
            24.3</A> показана страница с выбранными настройками финальной 
            конфигурации.</P>
            <DIV id=mark_11 class=lecture_mark></DIV>
            <P id=id_12 align=left><A name=image.24.3></A></P>
            <DIV><IMG 
            alt="Страница свойств Optimization для финальной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEACB(1).tmp" 
            width=614 height=430></DIV><BR><B>Рис. 24.3.</B>&nbsp; Страница 
            свойств Optimization для финальной конфигурации
            <P></P>
            <DIV id=mark_12 class=lecture_mark></DIV>
            <P id=id_13>Кроме того, можно также выбрать следующие параметры 
            оптимизации – генерировать максимально компактный код (Minimize 
            Size) и полная оптимизация (Full Optimization), которая включает 
            максимальные настройки оптимизации. На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.4">рис. 
            24.4</A> показан список свойств закладки Optimization.</P>
            <DIV id=mark_13 class=lecture_mark></DIV>
            <P id=id_14 align=left><A name=image.24.4></A></P>
            <DIV><IMG alt="Список свойств закладки Optimization" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEAED(1).tmp" 
            width=597 height=420></DIV><BR><B>Рис. 24.4.</B>&nbsp; Список 
            свойств закладки Optimization
            <P></P>
            <DIV id=mark_14 class=lecture_mark></DIV>
            <P id=id_15>На странице свойств генерации кода (Code Generation) 
            можно указать версию стандартной библиотеки языка C, которая будет 
            использована при компиляции и компоновке проекта – настройка Runtime 
            Library. Для отладочной конфигурации по умолчанию используется 
            настройка Multithreaded Debug DLL (многопоточная отладочная версия 
            стандартной библиотеки, размещенной в динамически загружаемом модуле 
            DLL). Эта версия библиотеки содержит отладочную информацию. Она 
            также поддерживает дополнительные проверки времени выполнения, что 
            позволяет, с одной стороны выполнять функции стандартной библиотеки 
            под управлением отладчика, а с другой стороны – обнаруживать на 
            раннем этапе трудно обнаруживаемые проблемы, такие как выход за 
            границы массивов, неправильную работу с динамически распределяемой 
            памятью и некоторые другие. Из-за наличия этих дополнительных 
            проверок отладочная версия библиотеки выполняется медленнее 
            финальной.</P>
            <DIV id=mark_15 class=lecture_mark></DIV>
            <P id=id_16>Для финальной версии проекта по умолчанию используется 
            настройка Multithreaded DLL (финальная версия стандартной библиотеки 
            без отладочной информации, размещенной в динамически загружаемом 
            модуле DLL). Важным моментом является то, что для запуска финальной 
            версии программы при компиляции ее с такими настройками, модуль DLL 
            стандартной библиотеки должен присутствовать в системе. Он 
            устанавливается либо при установки Visual Studio 2010, либо при 
            помощи отдельного инсталляционного пакета Microsoft Visual C++ 2010 
            Redistributable Package (x86). Если же библиотека DLL в системе не 
            установлена, то скомпилированная программа не будет запущена.</P>
            <DIV id=mark_16 class=lecture_mark></DIV>
            <P id=id_17>Для исключения зависимости от отдельной DLL стандартной 
            библиотеки значение настройки Runtime Library нужно установить в 
            Multithreaded (многопоточная версия стандартной библиотеки). В этом 
            случае весь необходимый функционал будет включен непосредственно в 
            результирующий .exe файл, который может быть запущен и исполнен 
            независимо от того, были ли установлены файлы DLL стандартной 
            библиотеки или нет.</P>
            <DIV id=mark_17 class=lecture_mark></DIV>
            <P id=id_18>На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.5">рис. 
            24.5</A> показана страница свойств закладки Code Generation для 
            отладочной конфигурации.</P>
            <DIV id=mark_18 class=lecture_mark></DIV>
            <P id=id_19 align=left><A name=image.24.5></A></P>
            <DIV><IMG 
            alt="Страница свойств Code Generation для отладочной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEB10(1).tmp" 
            width=607 height=429></DIV><BR><B>Рис. 24.5.</B>&nbsp; Страница 
            свойств Code Generation для отладочной конфигурации
            <P></P>
            <DIV id=mark_19 class=lecture_mark></DIV>
            <P id=id_20>На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.6">рис. 
            24.6</A> показана страница свойств закладки Code Generation для 
            финальной конфигурации.</P>
            <DIV id=mark_20 class=lecture_mark></DIV>
            <P id=id_21 align=left><A name=image.24.6></A></P>
            <DIV><IMG 
            alt="Страница свойств Code Generation для финальной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEB22(1).tmp" 
            width=613 height=435></DIV><BR><B>Рис. 24.6.</B>&nbsp; Страница 
            свойств Code Generation для финальной конфигурации
            <P></P>
            <DIV id=mark_21 class=lecture_mark></DIV>
            <P id=id_22>Отладочная и финальная версия программы компилируются 
            также с различными символами препроцессора . Для отладочной версии 
            объявляется символ препроцессора <SPAN class=texample>_DEBUG</SPAN>, 
            а для финальной версии – символ <SPAN class=texample>NDEBUG</SPAN>. 
            Это позволяет использовать директивы препроцессора для условной 
            компиляции программы, включая или исключая некоторую 
            функциональность в отладочную или финальную версию программы. Обычно 
            это используется для включения дополнительных проверок и отладочного 
            вывода в отладочную версию программы. Для финальной версии такие 
            проверки и вывод не нужны, поэтому они в нее не включаются. 
            Например, в следующем фрагменте программы значение переменной res 
            будет выведено на экран только в отладочной версии:</P>
            <DIV id=mark_22 class=lecture_mark></DIV>
            <DIV class=example><PRE>int a, b;
int res;
a = 10;
b = 20;
res = a + b;
  #ifdef _DEBUG
printf ("res = %d", res);
  #endif</PRE></DIV>
            <P id=id_26>На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.7">рис. 
            24.7</A> представлена страница свойств Preprocessor для отладочной 
            конфигурации. На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.8">рис. 
            24.8</A> представлена страница свойств Preprocessor для финальной 
            конфигурации.</P>
            <DIV id=mark_26 class=lecture_mark></DIV>
            <P id=id_27 align=left><A name=image.24.7></A></P>
            <DIV><IMG 
            alt="Страница свойств Preprocessor для отладочной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEB44(1).tmp" 
            width=576 height=406></DIV><BR><B>Рис. 24.7.</B>&nbsp; Страница 
            свойств Preprocessor для отладочной конфигурации
            <P></P>
            <DIV id=mark_27 class=lecture_mark></DIV>
            <P id=id_28 align=left><A name=image.24.8></A></P>
            <DIV><IMG 
            alt="Страница свойств Preprocessor для финальной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEB67(1).tmp" 
            width=612 height=433></DIV><BR><B>Рис. 24.8.</B>&nbsp; Страница 
            свойств Preprocessor для финальной конфигурации
            <P></P>
            <DIV id=mark_28 class=lecture_mark></DIV>
            <P id=id_29>В отладочной и финальной версиях также различаются 
            форматы отладочной информации (Debug Information Format), 
            генерируемой компилятором и сохраняемой в .pdb файле.</P>
            <DIV id=mark_29 class=lecture_mark></DIV>
            <P id=id_30>Для отладочной версии используется Program Database for 
            Edit and Continue, позволяющая отлаживать и даже изменять программу, 
            если сработала точка останова. При возобновлении выполнения 
            программы, внесенные изменения будут автоматически применены, и 
            выполнение продолжится уже с внесенными изменениями. Эта возможность 
            позволяет сократить время, необходимое на остановку и перекомпиляцию 
            программы при нахождении и исправлении ошибок. В тоже время такая 
            настройка несовместима с настройками оптимизации, поэтому может быть 
            использована только в отладочной версии. На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.9">рис. 
            24.9</A> показана страница свойств General для отладочной 
            конфигурации.</P>
            <DIV id=mark_30 class=lecture_mark></DIV>
            <P id=id_31 align=left><A name=image.24.9></A></P>
            <DIV><IMG alt="Страница свойств General для отладочной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEB79(1).tmp" 
            width=611 height=433></DIV><BR><B>Рис. 24.9.</B>&nbsp; Страница 
            свойств General для отладочной конфигурации
            <P></P>
            <DIV id=mark_31 class=lecture_mark></DIV>
            <P id=id_32>В финальной версии используется настройка Program 
            Database. Она включает генерацию .pdb файла, который может быть 
            использован при необходимости поиска ошибок в финальной версии 
            продукта. Эта настройка никак не влияет на оптимизацию генерируемого 
            кода, поэтому она может быть использована для финальной версии.</P>
            <DIV id=mark_32 class=lecture_mark></DIV>
            <P id=id_33>На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.10">рис. 
            24.10</A> показана страница свойств General для финальной 
            конфигурации.</P>
            <DIV id=mark_33 class=lecture_mark></DIV>
            <P id=id_34 align=left><A name=image.24.10></A></P>
            <DIV><IMG alt="Страница свойств General для финальной конфигурации" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEB9B(1).tmp" 
            width=610 height=431></DIV><BR><B>Рис. 24.10.</B>&nbsp; Страница 
            свойств General для финальной конфигурации
            <P></P>
            <DIV id=mark_34 class=lecture_mark></DIV>
            <P id=id_35>На странице свойств Debugging (отладка) узла Linker 
            настройка Generate Debug Info (генерировать отладочную информацию) 
            управляет генерацией отладочной информации. Настройка Generate 
            Program Database File (создавать файл с отладочной информаций для 
            программы) задает имя результирующего .pdb файла с отладочной 
            информацией.</P>
            <DIV id=mark_35 class=lecture_mark></DIV>
            <P id=id_36>На <A 
            href="mhtml:file://D:\c_cpp\Лекции\5.Программирование на языке C №1\Управление конфигурациями проекта в Visual Studio 2010.mht#image.24.11">рис. 
            24.11</A> показана страница свойств Debugging узла Linker для 
            отладочной версии.</P>
            <DIV id=mark_36 class=lecture_mark></DIV>
            <P id=id_37 align=left><A name=image.24.11></A></P>
            <DIV><IMG alt="Страница свойств Debugging для отладочной версии" 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEBBE(1).tmp" 
            width=612 height=432></DIV><BR><B>Рис. 24.11.</B>&nbsp; Страница 
            свойств Debugging для отладочной версии
            <P></P>
            <DIV id=mark_37 class=lecture_mark></DIV>
            <P id=id_38>MS Visual Studio 2010 предоставляет удобные и гибкие 
            механизмы настройки свойств конфигураций проектов, что позволяет 
            программистам выполнять компиляцию и сборку своих проектов с 
            актуальным набором настроек.</P>
            <DIV id=mark_38 class=lecture_mark></DIV></TD></TR>
        <TR>
          <TD height=8><IMG 
            src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
            width=1 height=8></TD></TR></TBODY></TABLE><!-- /content --></TD>
    <TD><IMG 
      src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
      width=8 height=1></TD></TR></TBODY></TABLE><!-- /bottom -->
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=orang height=1><IMG 
      src="Управление%20конфигурациями%20проекта%20в%20Visual%20Studio%202010_files/mhtEA55(1).tmp" 
      width=1 height=1></TD></TR>
  <TR>
    <TD class=ltxt align=center>© INTUIT.ru, 2003-2010. Все права 
  защищены.</TD></TR></TBODY></TABLE><!-- /bottom -->
<SCRIPT type=text/javascript src="">
</SCRIPT>

<SCRIPT type=text/javascript>
_uacct = "UA-3475067-1";
urchinTracker();
</SCRIPT>
</BODY></HTML>
